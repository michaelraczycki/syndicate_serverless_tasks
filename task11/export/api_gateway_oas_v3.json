{
    "openapi": "3.0.1",
    "info": {
      "title": "task11_api",
      "version": "2025-01-07T15:06:51Z",
      "description": "This API handles user sign-up, sign-in, table reservations, and management of restaurant tables."
    },
    "servers": [
      {
        "url": "https://dfperh8e5k.execute-api.eu-central-1.amazonaws.com/{basePath}",
        "variables": {
          "basePath": {
            "default": "api"
          }
        }
      }
    ],
    "paths": {
      "/reservations": {
        "get": {
          "summary": "Get All Reservations",
          "description": "Fetches a list of all table reservations, including details like client name, date, and time slots.",
          "responses": {
            "200": {
              "description": "Successful response with a list of reservations.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReservationsResponse"
                  },
                  "example": {
                    "reservations": [
                      {
                        "reservationId": "1234-5678-90ab",
                        "tableNumber": 1,
                        "clientName": "John Doe",
                        "date": "2025-01-07",
                        "slotTimeStart": "18:00",
                        "slotTimeEnd": "20:00"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid or missing parameters.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": {
                    "message": "Invalid request parameters."
                  }
                }
              }
            }
          },
          "security": [
            {
              "authorizer": []
            }
          ],
          "x-amazon-apigateway-integration": {
            "httpMethod": "GET",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create Reservation",
          "description": "Creates a new reservation for a specific table, given the required details.",
          "requestBody": {
            "description": "Reservation details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReservationRequest"
                },
                "example": {
                  "tableNumber": 1,
                  "clientName": "John Doe",
                  "phoneNumber": "1234567890",
                  "date": "2025-01-07",
                  "slotTimeStart": "18:00",
                  "slotTimeEnd": "20:00"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Reservation created successfully.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ReservationResponse"
                  },
                  "example": {
                    "reservationId": "1234-5678-90ab"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Validation errors.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": {
                    "message": "Time slot overlaps with an existing reservation."
                  }
                }
              }
            }
          },
          "security": [
            {
              "authorizer": []
            }
          ],
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "options": {
          "summary": "CORS Preflight",
          "description": "Handles CORS preflight requests.",
          "responses": {
            "200": {
              "description": "CORS response headers.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Methods": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Headers": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'POST,GET,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        }
      },
      "/tables": {
        "get": {
          "summary": "Get All Tables",
          "description": "Retrieves a list of all available tables in the restaurant, including table details.",
          "responses": {
            "200": {
              "description": "Successful response with a list of tables.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TablesResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Failed to retrieve tables.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": {
                    "message": "Unable to retrieve tables."
                  }
                }
              }
            }
          },
          "security": [
            {
              "authorizer": []
            }
          ],
          "x-amazon-apigateway-integration": {
            "httpMethod": "GET",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create New Table",
          "description": "Adds a new table entry to the system.",
          "requestBody": {
            "description": "Table details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Table created successfully.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TableResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Validation errors.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        }
      },
      "/tables/{tableId}": {
        "get": {
          "summary": "Get Table By ID",
          "description": "Retrieves information for a specific table based on the ID.",
          "parameters": [
            {
              "name": "tableId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response with table details.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TableItem"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid table ID.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "httpMethod": "GET",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "options": {
          "responses": {
            "200": {
              "description": "CORS support.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Methods": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Headers": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        }
      },
      "/signin": {
        "post": {
          "summary": "User Sign-In",
          "description": "Allows a user to sign in by providing their email and password.",
          "requestBody": {
            "description": "Sign-in details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sign-in successful, returns an access token.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SigninResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid credentials.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": {
                    "message": "Invalid email or password."
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "options": {
          "summary": "CORS Preflight",
          "description": "Handles CORS preflight requests for sign-in.",
          "responses": {
            "200": {
              "description": "CORS response headers.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Methods": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Headers": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        }
      },
      "/signup": {
        "post": {
          "summary": "User Sign-Up",
          "description": "Creates a new user account by providing registration details.",
          "requestBody": {
            "description": "Sign-up details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SigninRequest"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Sign-up successful, returns confirmation or token.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SigninResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request - Invalid sign-up data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": {
                    "message": "Sign-up failed due to invalid input data."
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "httpMethod": "POST",
            "uri": "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-central-1:905418349556:function:api_handler/invocations",
            "passthroughBehavior": "when_no_templates",
            "type": "aws_proxy",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            }
          }
        },
        "options": {
          "summary": "CORS Preflight",
          "description": "Handles CORS preflight requests for sign-up.",
          "responses": {
            "200": {
              "description": "CORS response headers.",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Methods": {
                  "schema": {
                    "type": "string"
                  }
                },
                "Access-Control-Allow-Headers": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Empty": {
          "title": "Empty Schema",
          "type": "object"
        },
        "ReservationsResponse": {
          "type": "object",
          "properties": {
            "reservations": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ReservationItem"
              }
            }
          }
        },
        "ReservationRequest": {
          "type": "object",
          "properties": {
            "tableNumber": { "type": "integer" },
            "clientName": { "type": "string" },
            "phoneNumber": { "type": "string" },
            "date": { "type": "string", "format": "date" },
            "slotTimeStart": { "type": "string", "format": "time" },
            "slotTimeEnd": { "type": "string", "format": "time" }
          },
          "required": [
            "tableNumber",
            "clientName",
            "phoneNumber",
            "date",
            "slotTimeStart",
            "slotTimeEnd"
          ]
        },
        "ReservationResponse": {
          "type": "object",
          "properties": {
            "reservationId": { "type": "string" }
          }
        },
        "ReservationItem": {
          "type": "object",
          "properties": {
            "reservationId": { "type": "string" },
            "tableNumber": { "type": "integer" },
            "clientName": { "type": "string" },
            "date": { "type": "string", "format": "date" },
            "slotTimeStart": { "type": "string", "format": "time" },
            "slotTimeEnd": { "type": "string", "format": "time" }
          }
        },
        "SigninRequest": {
          "type": "object",
          "properties": {
            "email": { "type": "string" },
            "password": { "type": "string" }
          },
          "required": ["email", "password"]
        },
        "SigninResponse": {
          "type": "object",
          "properties": {
            "accessToken": { "type": "string" }
          }
        },
        "Error": {
          "type": "object",
          "properties": {
            "message": { "type": "string" }
          }
        },
        "TablesResponse": {
          "type": "object",
          "properties": {
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TableItem"
              }
            }
          }
        },
        "TableRequest": {
          "type": "object",
          "properties": {
            "number": { "type": "integer" },
            "places": { "type": "integer" },
            "isVip": { "type": "boolean" },
            "minOrder": { "type": "integer" }
          },
          "required": ["number", "places", "isVip"]
        },
        "TableResponse": {
          "type": "object",
          "properties": {
            "id": { "type": "integer" }
          }
        },
        "TableItem": {
          "type": "object",
          "properties": {
            "id": { "type": "integer" },
            "number": { "type": "integer" },
            "places": { "type": "integer" },
            "isVip": { "type": "boolean" },
            "minOrder": { "type": "integer" }
          }
        }
      },
      "securitySchemes": {
        "authorizer": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header",
          "x-amazon-apigateway-authtype": "cognito_user_pools",
          "x-amazon-apigateway-authorizer": {
            "x-syndicate-cognito-userpool-names": [
              "${booking_userpool}"
            ],
            "type": "cognito_user_pools"
          }
        }
      }
    }
  }
  